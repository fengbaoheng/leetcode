#
# @lc app=leetcode.cn id=319 lang=python3
#
# [319] 灯泡开关
#
# https://leetcode-cn.com/problems/bulb-switcher/description/
#
# algorithms
# Medium (39.39%)
# Total Accepted:    2.3K
# Total Submissions: 5.9K
# Testcase Example:  '3'
#
# 初始时有 n 个灯泡关闭。 第 1 轮，你打开所有的灯泡。 第 2 轮，每两个灯泡你关闭一次。 第 3
# 轮，每三个灯泡切换一次开关（如果关闭则开启，如果开启则关闭）。第 i 轮，每 i 个灯泡切换一次开关。 对于第 n 轮，你只切换最后一个灯泡的开关。 找出
# n 轮后有多少个亮着的灯泡。
#
# 示例:
#
# 输入: 3
# 输出: 1
# 解释:
# 初始时, 灯泡状态 [关闭, 关闭, 关闭].
# 第一轮后, 灯泡状态 [开启, 开启, 开启].
# 第二轮后, 灯泡状态 [开启, 关闭, 开启].
# 第三轮后, 灯泡状态 [开启, 关闭, 关闭].
#
# 你应该返回 1，因为只有一个灯泡还亮着。
#
#
#
from math import floor, sqrt


class Solution:
    # 一个灯泡开关变化次数与该数的因数有关
    # 而灯泡最后是否亮着则看变化次数是否为奇数
    # 如：
    # 第1 个灯泡，在第【1】次时变化，亮
    # 第2 个灯泡，在第【1，2】次时变化，灭
    # 第3 个灯泡，在第【1，3】次时变化，灭
    # 第4 个灯泡，在第【1，2，4】次时变化，亮
    # 第5 个灯泡，在第【1，5】次时变化，灭
    # 第6 个灯泡，在第【1，2，3，6】次时变化，灭
    # ······
    # 第9 个灯泡，在第【1，3，9】次时变化，亮
    # ······
    # 第16个灯泡，在第【1，2，4，8，16】次时变化，亮
    # ······
    # 即寻找n以下有多少个开方数
    def bulbSwitch(self, n: int) -> int:
        return floor(sqrt(n))
